<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EguibarIT.Delegation</name>
    </assembly>
    <members>
        <member name="T:EguibarIT.Delegation.CMDlets.ChangeSite">
             <summary>
             <para type="synopsis">Set delegation to Modify Site objects</para>
             <para type="description">Configures the container (configuration) to delegate the permissions to a group so it can Modify Site objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclChangeSite "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclChangeSite -Group "SL_InfraRight" </code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclChangeSite -Group "SL_InfraRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Site objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeSite.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeSite.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSite.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSite.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSite.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSite.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ChangeSiteLink">
             <summary>
             <para type="synopsis">Set delegation to Modify Site-Link objects</para>
             <para type="description">Configures the container (configuration) to delegate the permissions to a group so it can Modify Site-Link objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclChangeSiteLink "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclChangeSiteLink -Group "SL_InfraRight" </code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclChangeSiteLink -Group "SL_InfraRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Site-Link objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeSiteLink.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeSiteLink.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSiteLink.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSiteLink.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSiteLink.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSiteLink.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ChangeSubnet">
             <summary>
             <para type="synopsis">Set delegation to Modify Subnet objects</para>
             <para type="description">Configures the container (configuration) to delegate the permissions to a group so it can Modify Subnet objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclChangeSubnet "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclChangeSubnet -Group "SL_InfraRight" </code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclChangeSubnet -Group "SL_InfraRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Subnet objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeSubnet.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeSubnet.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSubnet.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSubnet.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSubnet.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeSubnet.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AdmPwdComputerSelfPermission">
             <summary>
             <para type="synopsis">The function will delegate the right were the computer can self update admin password attributes</para>
             <para type="description">The function will delegate the right were the computer can self update admin password attributes</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdmPwdComputerSelfPermission "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdmPwdComputerSelfPermission -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdmPwdComputerSelfPermission -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>The function will delegate the right were the computer can self update admin password attributes</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdmPwdComputerSelfPermission.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdmPwdComputerSelfPermission.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdComputerSelfPermission.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdComputerSelfPermission.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdComputerSelfPermission.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdComputerSelfPermission.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AdmPwdReadPasswordPermission">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to read Admin password of Computer object</para>
             <para type="description">The function will delegate the premission for a group to read Admin password of Computer object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdmPwdReadPasswordPermission "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdmPwdReadPasswordPermission -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdmPwdReadPasswordPermission -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to read Admin password of Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdmPwdReadPasswordPermission.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdmPwdReadPasswordPermission.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdmPwdReadPasswordPermission.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdReadPasswordPermission.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdReadPasswordPermission.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdReadPasswordPermission.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdReadPasswordPermission.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AdmPwdResetPasswordPermission">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to reset Admin password of Computer object</para>
             <para type="description">The function will delegate the premission for a group to reset Admin password of Computer object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdmPwdResetPasswordPermission "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdmPwdResetPasswordPermission -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdmPwdResetPasswordPermission -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to reset Admin password of Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdmPwdResetPasswordPermission.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdmPwdResetPasswordPermission.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdmPwdResetPasswordPermission.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdResetPasswordPermission.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdResetPasswordPermission.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdResetPasswordPermission.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdmPwdResetPasswordPermission.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.BitLockerTPM">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify BitLocker and TPM information of Computer object</para>
             <para type="description">The function will delegate the premission for a group to Modify BitLocker and TPM information of Computer object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclBitLockerTPM "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclBitLockerTPM -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclBitLockerTPM -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify BitLocker and TPM information of Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.BitLockerTPM.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.BitLockerTPM.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.BitLockerTPM.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.BitLockerTPM.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.BitLockerTPM.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.BitLockerTPM.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.BitLockerTPM.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ChangeComputerPassword">
             <summary>
             <para type="synopsis">Set delegation to change computer password</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can change password on computer objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclChangeComputerPassword "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclChangeComputerPassword -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclChangeComputerPassword -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to change password on computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeComputerPassword.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeComputerPassword.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeComputerPassword.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeComputerPassword.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeComputerPassword.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeComputerPassword.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeComputerPassword.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ComputerAccountRestriction">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Computer Account Restriction Set of Computer object</para>
             <para type="description">The function will delegate the premission for a group to Modify Computer Account Restriction Set of Computer object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclComputerAccountRestriction "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclComputerAccountRestriction -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclComputerAccountRestriction -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Computer Account Restriction Set of Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerAccountRestriction.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerAccountRestriction.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerAccountRestriction.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerAccountRestriction.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerAccountRestriction.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerAccountRestriction.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerAccountRestriction.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ComputerGroupMembership">
             <summary>
             <para type="synopsis">Set delegation to change computer group membership</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can change computer object group membership.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclComputerGroupMembership "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclComputerGroupMembership -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclComputerGroupMembership -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to change computer object group membership</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerGroupMembership.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerGroupMembership.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerGroupMembership.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerGroupMembership.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerGroupMembership.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerGroupMembership.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerGroupMembership.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ComputerPersonalInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Personal Information Set of Computer object</para>
             <para type="description">The function will delegate the premission for a group to Modify Personal Information Set of Computer object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclComputerPersonalInfo "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclComputerPersonalInfo -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclComputerPersonalInfo -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Personal Information Set of Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerPersonalInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerPersonalInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerPersonalInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerPersonalInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerPersonalInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerPersonalInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerPersonalInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ComputerPublicInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Public Information Set of Computer object</para>
             <para type="description">The function will delegate the premission for a group to Modify Public Information Set of Computer object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclComputerPublicInfo "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclComputerPublicInfo -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclComputerPublicInfo -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Public Information Set of Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerPublicInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerPublicInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ComputerPublicInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerPublicInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerPublicInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerPublicInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ComputerPublicInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteComputer">
             <summary>
             <para type="synopsis">Set delegation to create/delete computer</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete computer objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteComputer "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteComputer -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteComputer -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteComputer.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteComputer.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteComputer.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteComputer.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteComputer.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteComputer.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteComputer.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.DeleteOnlyComputer">
             <summary>
             <para type="synopsis">The function will delegate premission for a group to Only Delete Computer objects from given container</para>
             <para type="description">The function will delegate premission for a group to Only Delete Computer objects from given container</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-DeleteOnlyComputer "SL_PcRight" "OU=X-Computers,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-DeleteOnlyComputer -Group "SL_PcRight" -LDAPpath "OU=X-Computers,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-DeleteOnlyComputer -Group "SL_PcRight" -LDAPpath "OU=X-Computers,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to delete only Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.DeleteOnlyComputer.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.DeleteOnlyComputer.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.DeleteOnlyComputer.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DeleteOnlyComputer.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DeleteOnlyComputer.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DeleteOnlyComputer.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DeleteOnlyComputer.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.DnsInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify DNS Information Set of Computer object</para>
             <para type="description">The function will delegate the premission for a group to Modify DNS Information Set of Computer object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclDnsInfo "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclDnsInfo -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclDnsInfo -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify DNS Information Set of Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.DnsInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.DnsInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.DnsInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DnsInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DnsInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DnsInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DnsInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.DomainJoinComputer">
             <summary>
             <para type="synopsis">The function will delegate premission for a group to Domain-Join Computer objects from given container</para>
             <para type="description">The function will delegate premission for a group to Domain-Join Computer objects from given container</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-DomainJoinComputer "SL_PcRight" "OU=X-Computers,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-DomainJoinComputer -Group "SL_PcRight" -LDAPpath "OU=X-Computers,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-DomainJoinComputer -Group "SL_PcRight" -LDAPpath "OU=X-Computers,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Domain-Join Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.DomainJoinComputer.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.DomainJoinComputer.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.DomainJoinComputer.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DomainJoinComputer.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DomainJoinComputer.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DomainJoinComputer.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.DomainJoinComputer.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.EnableDisableComputer">
             <summary>
             <para type="synopsis">Set delegation to enable/disable computer</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can enable/disable computer objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclEnableDisableComputer "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclEnableDisableComputer -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclEnableDisableComputer -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to enable/disable computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.EnableDisableComputer.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.EnableDisableComputer.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.EnableDisableComputer.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.EnableDisableComputer.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.EnableDisableComputer.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.EnableDisableComputer.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.EnableDisableComputer.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.MsTsGatewayInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify MS TerminalServices Gateway Information Set of Computer object</para>
             <para type="description">The function will delegate the premission for a group to Modify MS TerminalServices Gateway Information Set of Computer object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclMsTsGatewayInfo "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclMsTsGatewayInfo -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclMsTsGatewayInfo -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify MS TerminalServices Gateway Information Set of Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.MsTsGatewayInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.MsTsGatewayInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.MsTsGatewayInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.MsTsGatewayInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.MsTsGatewayInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.MsTsGatewayInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.MsTsGatewayInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.RenameComputer">
             <summary>
             <para type="synopsis">Set delegation to rename computer</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can rename computer objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Rename-AdAclCreateDeleteComputer "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Rename-AdAclComputer -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Rename-AdAclComputer -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to rename computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameComputer.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameComputer.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameComputer.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameComputer.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameComputer.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameComputer.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameComputer.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ResetComputerPassword">
             <summary>
             <para type="synopsis">Set delegation to reset computer password</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can reset password on computer objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclResetComputerPassword "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclResetComputerPassword -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclResetComputerPassword -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to reset password on computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ResetComputerPassword.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ResetComputerPassword.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ResetComputerPassword.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ResetComputerPassword.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ResetComputerPassword.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ResetComputerPassword.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ResetComputerPassword.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ValidateWriteDnsHostName">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify the extended right to validate DNS Host Name of Computer object</para>
             <para type="description">The function will delegate the premission for a group to Modify the extended right to validate DNS Host Name of Computer object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclValidateWriteDnsHostName "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclValidateWriteDnsHostName -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclValidateWriteDnsHostName -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify the extended right to validate DNS Host Name of Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ValidateWriteDnsHostName.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ValidateWriteDnsHostName.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ValidateWriteDnsHostName.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ValidateWriteDnsHostName.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ValidateWriteDnsHostName.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ValidateWriteDnsHostName.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ValidateWriteDnsHostName.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ValidateWriteSPN">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify the the extended right to validate Service Principal Name of Computer object</para>
             <para type="description">The function will delegate the premission for a group to Modify the the extended right to validate Service Principal Name of Computer object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclValidateWriteSPN "SL_PcRight" "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclValidateWriteSPN -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclValidateWriteSPN -Group "SL_PcRight" -LDAPpath "OU=Desktops,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify the the extended right to validate Service Principal Name of Computer objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ValidateWriteSPN.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ValidateWriteSPN.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ValidateWriteSPN.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ValidateWriteSPN.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ValidateWriteSPN.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ValidateWriteSPN.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ValidateWriteSPN.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ContactPersonalInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Personal Information Set of contact objects</para>
             <para type="description">The function will delegate the premission for a group to Modify Personal Information Set of contact objects</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclContactPersonalInfo "SL_ContactRight" "OU=Contacts,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclContactPersonalInfo -Group "SL_ContactRight" -LDAPpath "OU=Contacts,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclContactPersonalInfo -Group "SL_ContactRight" -LDAPpath "OU=Contacts,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Personal Information Set of contact objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ContactPersonalInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ContactPersonalInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ContactPersonalInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ContactPersonalInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ContactPersonalInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ContactPersonalInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ContactPersonalInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ContactWebInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Web Information Set of contact objects</para>
             <para type="description">The function will delegate the premission for a group to Modify Personal Information Set of contact objects</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclContactWebInfo "SL_ContactRight" "OU=Contacts,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclContactWebInfo -Group "SL_ContactRight" -LDAPpath "OU=Contacts,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclContactWebInfo -Group "SL_ContactRight" -LDAPpath "OU=Contacts,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Web Information Set of contact objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ContactWebInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ContactWebInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ContactWebInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ContactWebInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ContactWebInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ContactWebInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ContactWebInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteContact">
             <summary>
             <para type="synopsis">Set delegation to create/delete contact objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete contact objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteContact "SL_ContactRight" "OU=Contacts,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteContact -Group "SL_ContactRight" -LDAPpath "OU=Contacts,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteContact -Group "SL_ContactRight" -LDAPpath "OU=Contacts,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete contact objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteContact.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteContact.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteContact.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteContact.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteContact.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteContact.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteContact.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.FullControlDHCP">
             <summary>
             <para type="synopsis">Set delegation to fully manage Dynamic Host Configuration Protocol (DHCP)</para>
             <para type="description">Configures the configuration container to delegate the permissions to a group so it can fully manage Dynamic Host Configuration Protocol (DHCP).</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclFullControlDHCP "SL_DHCPRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclFullControlDHCP -Group "SL_DHCPRight" </code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclFullControlDHCP -Group "SL_DHCPRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to fully manage Dynamic Host Configuration Protocol (DHCP)</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.FullControlDHCP.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.FullControlDHCP.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FullControlDHCP.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FullControlDHCP.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FullControlDHCP.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FullControlDHCP.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.FSMOtransfer">
            <summary>
                <para type="synopsis">Delegate the management rights of FMSO roles</para>
                <para type="description">Delegate the right to transfer any of the 5 FMSO roles to a given group</para>
                <example>
                    <code>
                        Set-AdAclFMSOtransfer -Group "SL_FSMOadmin" -FSMOroles 'Schema', 'Infrastructure', 'DomainNaming', 'RID', 'PDC'
                    </code>
                </example>
                <example>
                    <code>
                        Set-AdAclFMSOtransfer -Group "SL_FSMOadmin" -FSMOroles 'Schema', 'Infrastructure', 'DomainNaming', 'RID', 'PDC' -RemoveRule
                    </code>
                </example>
                <remarks>Delegate the management rights of FMSO roles</remarks>
            </summary>
            <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.FSMOtransfer.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.FSMOtransfer.FSMOroles">
            <summary>
            <para type="inputType">STRING ARRAY representing the each FSMO roles.</para>
            <para type="description">Flexible Single Master Operations (FSMO) Roles to delegate.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.FSMOtransfer.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FSMOtransfer.BeginProcessing">
            <summary>
            
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FSMOtransfer.ProcessRecord">
            <summary>
            
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FSMOtransfer.EndProcessing">
            <summary>
            
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FSMOtransfer.StopProcessing">
            <summary>
            
            </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteGPO">
             <summary>
             <para type="synopsis">Set delegation to create/delete Group Policy Objects</para>
             <para type="description">The function will delegate the premission for a group to create/Delete Group Policy Objects objects within the Group Policy Container</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteOU "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteOU -Group "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteOU -Group "SL_InfraRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on the Group Policy Container to create/delete Group Policy Objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteGPO.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteGPO.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteGPO.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteGPO.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteGPO.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteGPO.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights">
             <summary>
             <para type="synopsis">Set the Privileged Rights into a Group Policy Objects (MUST be executed on DomainController)</para>
             <para type="description">The function will modify the Privileged Rights into a Group Policy Object based on the Delegation Model with Tiers</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-GpoPrivilegeRights "Default Domain" "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-GpoPrivilegeRights -GpoToModify "Default Domain" -NetworkLogon "SL_InfraRight"</code>
            
             </example>
             <remarks>Set the Privileged Rights into a Group Policy Objects (MUST be executed on DomainController)</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.GpoToModify">
            <summary>
            <para type="inputType">STRING Name of the GPO which will get the Restricted Groups modification.</para>
            <para type="description">Name of the GPO which will get the Restricted Groups modification.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.NetworkLogon">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be GRANTED the right "Access this computer from the network"</para>
            <para type="description">Identity (SamAccountName) to be GRANTED the right "Access this computer from the network</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.DenyNetworkLogon">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to configure the right "Deny access this computer from the network"</para>
            <para type="description">Identity (SamAccountName) to configure the right "Deny access this computer from the network"</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.InteractiveLogon">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be GRANTED the right "Allow Log On Locally"</para>
            <para type="description">Identity (SamAccountName) to be GRANTED the right "Allow Log On Locally"</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.DenyInteractiveLogon">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to configure the right "Deny Log On Locally"</para>
            <para type="description">Identity (SamAccountName) to configure the right "Deny Log On Locally"</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.RemoteInteractiveLogon">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be GRANTED the right "Allow Log On through Remote Desktop Services"</para>
            <para type="description">Identity (SamAccountName) to be GRANTED the right "Allow Log On through Remote Desktop Services"</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.DenyRemoteInteractiveLogon">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to configure the right "Deny Log On through Remote Desktop Services"</para>
            <para type="description">Identity (SamAccountName) to configure the right "Deny Log On through Remote Desktop Services"</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.BatchLogon">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be GRANTED the right "Log On as a Batch Job"</para>
            <para type="description">Identity (SamAccountName) to be GRANTED the right "Log On as a Batch Job"</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.DenyBatchLogon">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to configure the right "Deny Log On as a Batch Job"</para>
            <para type="description">Identity (SamAccountName) to configure the right "Deny Log On as a Batch Job"</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.ServiceLogon">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be GRANTED the right "Log On as a Service"</para>
            <para type="description">Identity (SamAccountName) to be GRANTED the right "Log On as a Service"</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.DenyServiceLogon">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to configure the right "Deny Log On as a Service"</para>
            <para type="description">Identity (SamAccountName) to configure the right "Deny Log On as a Service"</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GpoPrivilegeRights.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.GPoption">
             <summary>
             <para type="synopsis">Set delegation to gPOptions</para>
             <para type="description">The function will delegate the premission for a group to gPOptions</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclGPoption "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclGPoption -Group "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclGPoption -Group "SL_InfraRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on to gPOptions</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GPoption.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GPoption.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GPoption.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GPoption.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GPoption.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GPoption.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups">
             <summary>
             <para type="synopsis">Set the restrictions on Local groups (MUST be executed on DomainController)</para>
             <para type="description">Add groups to the restricted group section of a GPO.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-GpoRestrictedGroups "Default Domain" "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-GpoRestrictedGroups -GpoToModify "C-Baseline" -LocalAdminUsers "SL_InfraRight"</code>
            
             </example>
             <remarks>Set the restrictions on Local groups(MUST be executed on DomainController)</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.GpoToModify">
            <summary>
            <para type="inputType">STRING Name of the GPO which will get the Restricted Groups modification.</para>
            <para type="description">Name of the GPO which will get the Restricted Groups modification.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.MergeUsers">
            <summary>
            <para type="inputType">SWITCH parameter (true or false).</para>
            <para type="inputType">If present the value becomes TRUE, and the existing group members will remain. New users will be added.</para>
            <para type="inputType">Default is Not Present, so value becomes FALSE, and the existing group members will be removed, having only the users configured by this CMDlet.</para>
            <para type="description">Switch indicator to merge users (retain existing users). Default is not present, meaning all users in group will be removed</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.LocalAdminUsers">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be included in the Local Administrators group."</para>
            <para type="description">Identity (SamAccountName) to be included in the Local Administrators group.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.LocalBackupOpUsers">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be included in the Local Backup Operator group."</para>
            <para type="description">Identity (SamAccountName) to be included in the Local Backup Operator group.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.LocalEventLogReaders">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be included in the Local Event Log Readers group."</para>
            <para type="description">Identity (SamAccountName) to be included in the Local Event Log Readers group.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.LocalPerfLogUsers">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be included in the Local Performance Log Users group."</para>
            <para type="description">Identity (SamAccountName) to be included in the Local Performance Log Users group.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.LocalPerfMonitorUsers">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be included in the Local Performance Monitor Users group."</para>
            <para type="description">Identity (SamAccountName) to be included in the Local Performance Monitor Users group.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.LocalRemoteDesktopUsers">
            <summary>
            <para type="inputType">STRING[] Identity (SamAccountName) to be included in the Local Remote Desktop Users group."</para>
            <para type="description">Identity (SamAccountName) to be included in the Local Remote Desktop Users group.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GpoRestrictedGroups.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.LinkGPO">
             <summary>
             <para type="synopsis">Set delegation to Link Group Policy Objects</para>
             <para type="description">The function will delegate the premission for a group to Link Group Policy Objects objects to Domain or OU</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclLinkGPO "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclLinkGPO -Group "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclLinkGPO -Group "SL_InfraRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on to Link Group Policy Objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.LinkGPO.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.LinkGPO.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.LinkGPO.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.LinkGPO.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.LinkGPO.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.LinkGPO.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.RSoPLogging">
             <summary>
             <para type="synopsis">Set delegation to Resultant Set of Policy (Logging)</para>
             <para type="description">The function will delegate the premission for a group to Resultant Set of Policy (Logging)</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclRSoPLogging "SL_GpoRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclRSoPLogging -Group "SL_GpoRight"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclRSoPLogging -Group "SL_GpoRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on to Resultant Set of Policy (Logging)</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RSoPLogging.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RSoPLogging.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RSoPLogging.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RSoPLogging.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RSoPLogging.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RSoPLogging.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.RSoPPlanning">
             <summary>
             <para type="synopsis">Set delegation to Resultant Set of Policy (Planning)</para>
             <para type="description">The function will delegate the premission for a group to Resultant Set of Policy (Planning)</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclRSoPPlanning "SL_GpoRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclRSoPPlanning -Group "SL_GpoRight"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclRSoPPlanning -Group "SL_GpoRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on to Resultant Set of Policy (Planning)</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RSoPPlanning.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RSoPPlanning.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RSoPPlanning.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RSoPPlanning.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RSoPPlanning.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RSoPPlanning.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ChangeGroup">
             <summary>
             <para type="synopsis">Set delegation to change Group objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can change Group objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclChangeGroup "SL_GroupRight" "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclChangeGroup -Group "SL_GroupRight" -LDAPpath "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclChangeGroup -Group "SL_GroupRight" -LDAPpath "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to change Group objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeGroup.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeGroup.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeGroup.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeGroup.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeGroup.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeGroup.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeGroup.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteGroup">
             <summary>
             <para type="synopsis">Set delegation to create/delete Group objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete Group objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteGroup "SL_GroupRight" "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteGroup -Group "SL_GroupRight" -LDAPpath "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteGroup -Group "SL_GroupRight" -LDAPpath "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete Group objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteGroup.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteGroup.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteGroup.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteGroup.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteGroup.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteGroup.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteGroup.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.GroupGroupMembership">
             <summary>
             <para type="synopsis">Set delegation to change group group membership</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can change group object group membership.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclGroupGroupMembership "SL_GroupRight" "OU=Group,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclGroupGroupMembership -Group "SL_GroupRight" -LDAPpath "OU=Group,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclGroupGroupMembership -Group "SL_GroupRight" -LDAPpath "OU=Group,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to change Group object group membership</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GroupGroupMembership.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GroupGroupMembership.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GroupGroupMembership.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GroupGroupMembership.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GroupGroupMembership.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GroupGroupMembership.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GroupGroupMembership.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.RenameGroup">
             <summary>
             <para type="synopsis">Set delegation to Rename groups</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can Rename group objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Rename-AdAclGroup "SL_CreateGroupRight" "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Rename-AdAclGroup -Group "SL_CreateGroupRight" -LDAPpath "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Rename-AdAclGroup -Group "SL_CreateGroupRight" -LDAPpath "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Rename group objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameGroup.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameGroup.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameGroup.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameGroup.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameGroup.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameGroup.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameGroup.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ChangeOU">
             <summary>
             <para type="synopsis">Set delegation to change OU objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can change OU objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclChangeOU "SL_InfraRight" "OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclChangeOU -Group "SL_InfraRight" -LDAPpath "OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclChangeOU -Group "SL_InfraRight" -LDAPpath "OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to change OU objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeOU.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeOU.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeOU.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeOU.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeOU.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeOU.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeOU.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteOU">
             <summary>
             <para type="synopsis">Set delegation to create/delete OU objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete OU objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteOU "SL_InfraRight" "OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteOU -Group "SL_InfraRight" -LDAPpath "OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteOU -Group "SL_InfraRight" -LDAPpath "OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete OU objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteOU.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteOU.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteOU.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteOU.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteOU.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteOU.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteOU.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.RenameOU">
             <summary>
             <para type="synopsis">Set delegation to Rename OU</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can Rename organizational unit objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Rename-AdAclOU "SL_ADRight" "OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Rename-AdAclOU -Group "SL_ADRight" -LDAPpath "OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Rename-AdAclOU -Group "SL_ADRight" -LDAPpath "OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Rename OU objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameOU.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameOU.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameOU.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameOU.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameOU.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameOU.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameOU.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ChangePrintQueue">
             <summary>
             <para type="synopsis">Set delegation to Modify Print Queues objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can Modify Print Queues objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclChangePrintQueue "SL_PrintRight" "OU=Printers,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclChangePrintQueue -Group "SL_PrintRight" -LDAPpath "OU=Printers,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclChangePrintQueue -Group "SL_PrintRight" -LDAPpath "OU=Printers,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Print Queues objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangePrintQueue.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangePrintQueue.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangePrintQueue.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangePrintQueue.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangePrintQueue.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangePrintQueue.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangePrintQueue.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeletePrintQueue">
             <summary>
             <para type="synopsis">Set delegation to create/delete Print Queues objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete Print Queues objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeletePrintQueue "SL_PrintRight" "OU=Printers,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeletePrintQueue -Group "SL_PrintRight" -LDAPpath "OU=Printers,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeletePrintQueue -Group "SL_PrintRight" -LDAPpath "OU=Printers,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete Print Queues objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeletePrintQueue.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeletePrintQueue.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeletePrintQueue.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeletePrintQueue.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeletePrintQueue.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeletePrintQueue.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeletePrintQueue.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.RenamePrintQueue">
             <summary>
             <para type="synopsis">Set delegation to Rename PrintQueue</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can Rename PrintQueue objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Rename-AdAclPrintQueue "SL_PrinterRight" "OU=Printers,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Rename-AdAclPrintQueue -Group "SL_PrinterRight" -LDAPpath "OU=Printers,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Rename-AdAclPrintQueue -Group "SL_PrinterRight" -LDAPpath "OU=Printers,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Rename PrintQueue objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenamePrintQueue.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenamePrintQueue.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenamePrintQueue.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenamePrintQueue.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenamePrintQueue.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenamePrintQueue.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenamePrintQueue.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ChangeUserPassword">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Change user password</para>
             <para type="description">The function will delegate the premission for a group to Change user password</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclChangeUserPassword "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclChangeUserPassword -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclChangeUserPassword -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to change password on user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeUserPassword.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeUserPassword.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeUserPassword.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeUserPassword.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeUserPassword.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeUserPassword.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeUserPassword.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteUser">
             <summary>
             <para type="synopsis">Set delegation to create/delete user</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete user objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteUser "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteUser -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteUser -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteUser.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteUser.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteUser.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteUser.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteUser.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteUser.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteUser.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.EnableDisableUser">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to enable or disable a user</para>
             <para type="description">The function will delegate the premission for a group to enable or disable a user</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclEnableDisableUser "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclEnableDisableUser -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclEnableDisableUser -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to enable/disable user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.EnableDisableUser.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.EnableDisableUser.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.EnableDisableUser.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.EnableDisableUser.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.EnableDisableUser.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.EnableDisableUser.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.EnableDisableUser.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.RenameUser">
             <summary>
             <para type="synopsis">Set delegation to Rename user</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can Rename user objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Rename-AdAclUser "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Rename-AdAclUser -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Rename-AdAclUser -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Rename user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameUser.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameUser.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RenameUser.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameUser.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameUser.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameUser.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RenameUser.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ResetUserPassword">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to reset user password</para>
             <para type="description">The function will delegate the premission for a group to reset user password</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclResetUserPassword "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclResetUserPassword -Group "SL_CreateUserRight" -LDAPPath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclResetUserPassword -Group "SL_CreateUserRight" -LDAPPath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to reset password on user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ResetUserPassword.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ResetUserPassword.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ResetUserPassword.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ResetUserPassword.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ResetUserPassword.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ResetUserPassword.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ResetUserPassword.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.UnlockUser">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Unlock a user</para>
             <para type="description">The function will delegate the premission for a group to Unlock a user</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclUnlockUser "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclUnlockUser -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclUnlockUser -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to unlock user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UnlockUser.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UnlockUser.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UnlockUser.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UnlockUser.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UnlockUser.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UnlockUser.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UnlockUser.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.UserAccountRestriction">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify User Account Restriction Set of user object</para>
             <para type="description">The function will delegate the premission for a group to Modify User Account Restriction Set of user object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclUserAccountRestriction "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclUserAccountRestriction -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclUserAccountRestriction -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify User Account Restriction Set of user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserAccountRestriction.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserAccountRestriction.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserAccountRestriction.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserAccountRestriction.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserAccountRestriction.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserAccountRestriction.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserAccountRestriction.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.UserEmailInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Phone and Mail Options Set of user object</para>
             <para type="description">The function will delegate the premission for a group to Modify Phone and Mail Options Set of user object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclUserEmailInfo "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclUserEmailInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclUserEmailInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Phone and Mail Options Set of user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserEmailInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserEmailInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserEmailInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserEmailInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserEmailInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserEmailInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserEmailInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.UserGeneralInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify General Information Set of user object</para>
             <para type="description">The function will delegate the premission for a group to Modify General Information Set of user object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclUserGeneralInfo "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclUserGeneralInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclUserGeneralInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify General Information Set of user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserGeneralInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserGeneralInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserGeneralInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserGeneralInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserGeneralInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserGeneralInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserGeneralInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.UserGroupMembership">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Group Membership Set of user object</para>
             <para type="description">The function will delegate the premission for a group to Modify Group Membership Set of user object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclUserGroupMembership "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclUserGroupMembership -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclUserGroupMembership -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Group Membership Set of user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserGroupMembership.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserGroupMembership.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserGroupMembership.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserGroupMembership.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserGroupMembership.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserGroupMembership.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserGroupMembership.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.UserLogonInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Logon Information Set of user object</para>
             <para type="description">The function will delegate the premission for a group to Modify Logon Information Set of user object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclUserLogonInfo "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclUserLogonInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclUserLogonInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Logon Information Set of user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserLogonInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserLogonInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserLogonInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserLogonInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserLogonInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserLogonInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserLogonInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.UserPersonalInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Personal Information Set of user object</para>
             <para type="description">The function will delegate the premission for a group to Modify Personal Information Set of user object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclUserPersonalInfo "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclUserPersonalInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclUserPersonalInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Personal Information Set of user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserPersonalInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserPersonalInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserPersonalInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserPersonalInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserPersonalInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserPersonalInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserPersonalInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.UserPublicInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Public Information Set of user object</para>
             <para type="description">The function will delegate the premission for a group to Modify Public Information Set of user object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclUserPublicInfo "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclUserPublicInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclUserPublicInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Public Information Set of user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserPublicInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserPublicInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserPublicInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserPublicInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserPublicInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserPublicInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserPublicInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.UserWebInfo">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Modify Web Information Set of user object</para>
             <para type="description">The function will delegate the premission for a group to Modify Web Information Set of user object</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclUserWebInfo "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclUserWebInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclUserWebInfo -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Modify Web Information Set of user objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserWebInfo.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserWebInfo.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.UserWebInfo.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserWebInfo.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserWebInfo.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserWebInfo.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.UserWebInfo.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ChangeVolume">
             <summary>
             <para type="synopsis">Set delegation to change Volume objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can change Group objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclChangeVolume "SL_VolumeRight" "OU=Shares,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclChangeVolume -Group "SL_VolumeRight" -LDAPpath "OU=Shares,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclChangeVolume -Group "SL_VolumeRight" -LDAPpath "OU=Shares,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to change Volume objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeVolume.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeVolume.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.ChangeVolume.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeVolume.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeVolume.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeVolume.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.ChangeVolume.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteVolume">
             <summary>
             <para type="synopsis">Set delegation to create/delete Volume objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete Volume objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteVolume "SL_VolumeRight" "OU=Shares,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteVolume -Group "SL_VolumeRight" -LDAPpath "OU=Shares,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteVolume -Group "SL_VolumeRight" -LDAPpath "OU=Shares,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete Volume objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteVolume.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteVolume.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteVolume.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteVolume.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteVolume.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteVolume.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteVolume.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.FullControlDFS">
             <summary>
             <para type="synopsis">Set delegation to fully manage Distributed File System (DFS)</para>
             <para type="description">Configures the configuration container to delegate the permissions to a group so it can fully manage Distributed File System (DFS).</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclFullControlDFS "SL_DfsRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclFullControlDFS -Group "SL_DfsRight" </code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclFullControlDFS -Group "SL_DfsRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to fully manage Distributed File System (DFS)</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.FullControlDFS.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.FullControlDFS.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FullControlDFS.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FullControlDFS.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FullControlDFS.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.FullControlDFS.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AdDirectoryReplication">
             <summary>
             <para type="synopsis">Sets the premission for a group to Replicate the directory</para>
             <para type="description">Configures the configuration container to delegate the permissions to a group so it can replicate the directory</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdDirectoryReplication "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdDirectoryReplication -Group "SL_InfraRight" </code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdDirectoryReplication -Group "SL_InfraRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete Site objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdDirectoryReplication.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdDirectoryReplication.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdDirectoryReplication.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdDirectoryReplication.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdDirectoryReplication.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdDirectoryReplication.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AccessRule">
             <summary>
             <para type="synopsis">Show Access Rules of given object</para>
             <para type="description">Display all the Access Rules</para>
             <para type="description">for the given object</para>
             <example>
             This example shows how to use this CMDlet
             <code>Get-AclAccessRule "OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet filtering by identity
             <code>Get-AclAccessRule "OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local" "TheGood"</code>
            
             This example shows how to use this CMDlet using named parameters
             <code>Get-AclAccessRule -LDAPpath "OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet using named parameters filtering by identity
             <code>Get-AclAccessRule -LDAPpath "OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local" -SearchBy "TheGood"</code>
             </example>
             <remarks>Get the list of ACE of a given objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AccessRule.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the container Distinguished name (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">The DistinguishedName of object to show Access Rule.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AccessRule.SearchBy">
            <summary>
            <para type="inputType">STRING representing the Identity to search for. (ej. Administrator).</para>
            <para type="description">The SamAccountName of object to search for within all Access Rules.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AccessRule.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AccessRule.ProcessRecord">
            <returns>
            Returns the ACE of the given object
            </returns>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AccessRule.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AccessRule.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.GetGUIDtoName">
            <summary>
            <para type="synopsis">Helper function to translate GUID to display name</para>
            <para type="description">This function translates a GUID into a human readible Display Name</para>
            <example>
            This example shows how to use this CMDlet to get the name of the given GUID
            <code>Get-GUIDtoName -GUID "bf967a86-0de6-11d0-a285-00aa003049e2"</code>
            </example>
            <remarks>Get LDAP display name from GUID of an object.</remarks>
            </summary>
            <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GetGUIDtoName.GUID">
            <summary>
            <para type="outputType">GUID.</para>
            <para type="description">GUID of the object to translate to its display name.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetGUIDtoName.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetGUIDtoName.ProcessRecord">
            <returns>
            Returns the name of the object
            </returns>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetGUIDtoName.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetGUIDtoName.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.GetAttributeSchemaHashTable">
            <summary>
                <para type="synopsis">Function to Read all Attributes GUID from Schema</para>
                <para type="description">Function that reads all Attributes GUID from the Schema and returns a Hashtable object</para>
                    <example>
                        <para>This example shows how to use this CMDlet to get the Hashtable</para>
                        <code>Get-AttributeSchemaHashTable</code>
                    </example>
                <remarks>Get all Attributes and its corresponding GUID from Schema, returning a hashtable</remarks>
            </summary>
            <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GetAttributeSchemaHashTable.AttributeSchemaMap">
            <summary>
                <para type="outputType">Hashtable.</para>
                <para type="description">Hashtable containing Attributes and its corresponding GUID.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetAttributeSchemaHashTable.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetAttributeSchemaHashTable.ProcessRecord">
            <returns>
            Returns the Hashtable
            </returns>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetAttributeSchemaHashTable.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetAttributeSchemaHashTable.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AttributeSchemaHashTable">
            <summary>
                <para type="outputType">Hashtable.</para>
                <para type="description">Hashtable containing Attributes and its corresponding GUID.</para>
            </summary>
        </member>
        <member name="F:EguibarIT.Delegation.CMDlets.AttributeSchemaHashTable.AttributeSchemaMap">
            <summary>
                <para type="outputType">Hashtable.</para>
                <para type="description">Hashtable containing Attributes and its corresponding GUID.</para>
            </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.GetClassSchemaHashTable">
            <summary>
                <para type="synopsis">Function to Read all Class GUID from Schema</para>
                <para type="description">Function that reads all Class GUID from the Schema and returns a Hashtable object</para>
                    <example>
                        <para>This example shows how to use this CMDlet to get the Hashtable</para>
                        <code>Get-ClassSchemaHashTable</code>
                    </example>
                <remarks>Get all object class and its corresponding GUID from Schema, returning a hashtable</remarks>
            </summary>
            <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GetClassSchemaHashTable.ClassSchemaMap">
            <summary>
                <para type="outputType">Hashtable.</para>
                <para type="description">Hashtable containing object class and its corresponding GUID.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetClassSchemaHashTable.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetClassSchemaHashTable.ProcessRecord">
            <returns>
            Returns the Hashtable
            </returns>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetClassSchemaHashTable.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetClassSchemaHashTable.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ClassSchemaHashTable">
            <summary>
                <para type="outputType">Hashtable.</para>
                <para type="description">Hashtable containing object class and its corresponding GUID.</para>
            </summary>
        </member>
        <member name="F:EguibarIT.Delegation.CMDlets.ClassSchemaHashTable.ClassSchemaMap">
            <summary>
                <para type="outputType">Hashtable.</para>
                <para type="description">Hashtable containing object class and its corresponding GUID.</para>
            </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.GetExtendedRightHashTable">
            <summary>
                <para type="synopsis">Function to Read all Extended Rights GUID from Schema</para>
                <para type="description">Function that reads all Extended Rights GUID from the Schema and returns a Hashtable object</para>
                    <example>
                        <para>This example shows how to use this CMDlet to get the Hashtable</para>
                        <code>Get-ExtendedRightHashTable</code>
                    </example>
                <remarks>Get all Extended Rights and its corresponding GUID from Schema, returning a hashtable</remarks>
            </summary>
            <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.GetExtendedRightHashTable.ExtendedRightsMap">
            <summary>
                <para type="outputType">Hashtable.</para>
                <para type="description">Hashtable containing Extended Rights and its corresponding GUID.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetExtendedRightHashTable.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetExtendedRightHashTable.ProcessRecord">
            <returns>
            Returns the Hashtable
            </returns>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetExtendedRightHashTable.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.GetExtendedRightHashTable.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.ExtendedRightHashTable">
            <summary>
                <para type="outputType">Hashtable.</para>
                <para type="description">Hashtable containing Extended Rights and its corresponding GUID.</para>
            </summary>
        </member>
        <member name="F:EguibarIT.Delegation.CMDlets.ExtendedRightHashTable.extendedrightsmap">
            <summary>
                <para type="outputType">Hashtable.</para>
                <para type="description">Hashtable containing Extended Rights and its corresponding GUID.</para>
            </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteInetOrgPerson">
             <summary>
             <para type="synopsis">Set delegation to create/delete InetOrg objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete InetOrg objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-CreateDeleteInetOrgPerson "SL_CreateUserRight" "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-CreateDeleteInetOrgPerson -Group "SL_CreateUserRight" -LDAPpath "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-CreateDeleteInetOrgPerson -Group "SL_CreateUserRight" -LDAPpath "OU=Groups,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete InetOrg objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteInetOrgPerson.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteInetOrgPerson.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteInetOrgPerson.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteInetOrgPerson.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteInetOrgPerson.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteInetOrgPerson.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteInetOrgPerson.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AccountOperator">
             <summary>
             <para type="synopsis">Remove Account Operators built-in group from the given object</para>
             <para type="description">Remove the built-in group Account Operators from the given object.</para>
             <example>This example shows how to use this CMDlet to remove permissions
             <code>Remove-AccountOperator "OU=Admin,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Remove-AccountOperator -LDAPpath "OU=Admin,DC=EguibarIT,DC=local" </code>
             </example>
             <remarks>Remove Account Operators built-in group from the given object</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AccountOperator.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Admin,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be removed.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AccountOperator.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AccountOperator.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AccountOperator.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AccountOperator.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AuthUser">
             <summary>
             <para type="synopsis">Remove Authenticated Users built-in group from the given object</para>
             <para type="description">Remove the built-in group Authenticated Users from the given object.</para>
             <example>This example shows how to use this CMDlet to remove permissions
             <code>Remove-AuthUser "OU=Admin,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Remove-AuthUser -LDAPpath "OU=Admin,DC=EguibarIT,DC=local" </code>
             </example>
             <remarks>Remove Authenticated Users built-in group from the given object</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AuthUser.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Admin,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be removed.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AuthUser.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AuthUser.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AuthUser.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AuthUser.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.Everyone">
             <summary>
             <para type="synopsis">Remove Print Operators built-in group from the given object</para>
             <para type="description">Remove the built-in group Print Operators from the given object.</para>
             <example>This example shows how to use this CMDlet to remove permissions
             <code>Remove-Everyone "OU=Admin,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Remove-Everyone -LDAPpath "OU=Admin,DC=EguibarIT,DC=local" </code>
             </example>
             <remarks>Remove Everyone built-in group from the given object</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.Everyone.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Admin,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be removed.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.Everyone.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.Everyone.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.Everyone.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.Everyone.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.PreWin2000">
             <summary>
             <para type="synopsis">Remove Pre-Windows 2000 Compatible Access built-in group from the given object</para>
             <para type="description">Remove the built-in group Pre-Windows 2000 Compatible Access from the given object.</para>
             <example>This example shows how to use this CMDlet to remove permissions
             <code>Remove-PreWin2000 "OU=Admin,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Remove-PreWin2000 -LDAPpath "OU=Admin,DC=EguibarIT,DC=local" </code>
             </example>
             <remarks>Remove Pre-Windows 2000 Compatible Access built-in group from the given object</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.PreWin2000.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Admin,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be removed.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PreWin2000.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PreWin2000.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PreWin2000.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PreWin2000.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.PreWin2000FromOU">
             <summary>
             <para type="synopsis">Remove Pre-Windows 2000 Compatible Access built-in group from the given Organizational Unit</para>
             <para type="description">Remove the built-in group Pre-Windows 2000 Compatible Access from the given Organizational Unit.</para>
             <example>This example shows how to use this CMDlet to remove permissions
             <code>Remove-PreWin2000FromOU "OU=Admin,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Remove-PreWin2000FromOU -LDAPpath "OU=Admin,DC=EguibarIT,DC=local" </code>
             </example>
             <remarks>Remove Pre-Windows 2000 Compatible Access built-in group from the given Organizational Unit</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.PreWin2000FromOU.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Admin,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be removed.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PreWin2000FromOU.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PreWin2000FromOU.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PreWin2000FromOU.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PreWin2000FromOU.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.PrintOperator">
             <summary>
             <para type="synopsis">Remove Print Operators built-in group from the given object</para>
             <para type="description">Remove the built-in group Print Operators from the given object.</para>
             <example>This example shows how to use this CMDlet to remove permissions
             <code>Remove-PrintOperator "OU=Admin,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Remove-PrintOperator -LDAPpath "OU=Admin,DC=EguibarIT,DC=local" </code>
             </example>
             <remarks>Remove Print Operators built-in group from the given object</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.PrintOperator.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Admin,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be removed.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PrintOperator.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PrintOperator.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PrintOperator.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PrintOperator.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.SpecificACLandEnableInheritance">
             <summary>
             <para type="synopsis">The function will Remove Specific/Non-Inherited ACL and enable inheritance on an object</para>
             <para type="description">The function will Remove Specific/Non-Inherited ACL and enable inheritance on an object</para>
             <example>This example shows how to use this CMDlet to Remove Specific/Non-Inherited ACL and enable inheritance of an object
             <code>Set-AdInheritance "OU=Admin,DC=EguibarIT,DC=local" $true $true</code>
            
             This example shows how to use this CMDlet to Set/Clear Inheritance of an object using named parameters
             <code>Remove-SpecificACLandEnableInheritance -LDAPpath "OU=Admin,DC=EguibarIT,DC=local" -RemoveInheritance $true -RemovePermissions $true</code>
             </example>
             <remarks>The function will Set/Clear Inheritance of an object</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.SpecificACLandEnableInheritance.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.SpecificACLandEnableInheritance.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.SpecificACLandEnableInheritance.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.SpecificACLandEnableInheritance.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.SpecificACLandEnableInheritance.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AdInheritance">
             <summary>
             <para type="synopsis">The function will Set/Clear Inheritance of an object</para>
             <para type="description">The function will Set/Clear Inheritance of an object.</para>
             <para type="description">RemoveInheritancevalue will Set/Remove the inheritance Check-Box</para>
             <para type="description">  * If TRUE the value of the IsProtected parameter (1) to TRUE, the inheritance checkbox will be cleared. </para>
             <para type="description">  * If FALSE, the checkbox will become checked</para>
             <para type="description">RemovePermissions will "copy" (true)  or "remove" (false) the permissions. The "preserveInheritance" parameter (2) only has an effect when we uncheck the inheritance checkbox  (RemoveInheritancevalue = TRUE).</para>
             <para type="description">  * If RemovePermissions is set to TRUE then the permissions from the parent object are copied to the object. It has the same effect as clicking "Add".</para>
             <para type="description">  * If RemovePermissions is set to FALSE, it has the same effect as clicking "Remove"</para>
             <example>This example shows how to use this CMDlet to Set/Clear Inheritance of an object
             <code>Set-AdInheritance "OU=Admin,DC=EguibarIT,DC=local" $true $true</code>
            
             This example shows how to use this CMDlet to Set/Clear Inheritance of an object using named parameters
             <code>Set-AdInheritance -LDAPpath "OU=Admin,DC=EguibarIT,DC=local" -RemoveInheritance $true -RemovePermissions $true</code>
             </example>
             <remarks>The function will Set/Clear Inheritance of an object</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdInheritance.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdInheritance.RemoveInheritance">
            <summary>
            <para type="inputType">BOOL prameter (true or false). </para>
            <para type="description">TRUE or FALSE for the IsProtected parameter. If TRUE the inheritance will be cleared.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdInheritance.RemovePermissions">
            <summary>
            <para type="inputType">BOOL prameter (true or false). </para>
            <para type="description">TRUE or FALSE for the preserveInheritance parameter. If TRUE the permissions from the parent object are copied to the object, otherwise are removed.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdInheritance.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdInheritance.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdInheritance.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdInheritance.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.WellKnownSID">
            <summary>
                <para type="synopsis">Get well Known SIDs</para>
                <para type="description">Get well Known SIDs</para>
                    <example>
                        <code>Get-WellKnownSID Name "dvader"</code>
                    </example>
                <remarks>Get well Known SIDs</remarks>
            </summary>
            <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.WellKnownSID.Name">
            <summary>
            <para type="inputType">STRING representing the object SamAccountName.</para>
            <para type="description">Name of the identity to find its SID, including Well-Known SIDs.</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.WellKnownSID.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.WellKnownSID.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.WellKnownSID.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.WellKnownSID.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteMSA">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Create/Delete Managed Service Accounts</para>
             <para type="description">The function will delegate the premission for a group to Create/Delete Managed Service Accounts</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteMSA "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteMSA -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteMSA -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Create/Delete Managed Service Accounts objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteMSA.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteMSA.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteMSA.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteMSA.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteMSA.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteMSA.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteMSA.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AdAclCreateDeleteGMSA">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Create/Delete Group Managed Service Accounts</para>
             <para type="description">The function will delegate the premission for a group to Create/Delete Group Managed Service Accounts</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteGMSA "SL_CreateUserRight" "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteGMSA -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteGMSA -Group "SL_CreateUserRight" -LDAPpath "OU=Users,OU=XXXX,OU=Sites,DC=EguibarIT,DC=local" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to Create/Delete Group Managed Service Accounts objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdAclCreateDeleteGMSA.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdAclCreateDeleteGMSA.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdAclCreateDeleteGMSA.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdAclCreateDeleteGMSA.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdAclCreateDeleteGMSA.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdAclCreateDeleteGMSA.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdAclCreateDeleteGMSA.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.AdAclMngPrivilegedGroups">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Managed Privileged Groups</para>
             <para type="description">The function will delegate the premission for a group to Managed Privileged Groups</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclMngPrivilegedGroups "SL_PGM"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclMngPrivilegedGroups -Group "SL_PGM"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclMngPrivilegedGroups -Group "SL_PGM" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on AdminSDHolder container to Manage Privileged Group objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdAclMngPrivilegedGroups.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.AdAclMngPrivilegedGroups.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdAclMngPrivilegedGroups.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdAclMngPrivilegedGroups.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdAclMngPrivilegedGroups.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.AdAclMngPrivilegedGroups.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.MngPrivilegedAccounts">
             <summary>
             <para type="synopsis">The function will delegate the premission for a group to Managed Privileged Accounts</para>
             <para type="description">The function will delegate the premission for a group to Managed Privileged Accounts</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclMngPrivilegedAccounts "SL_PUM"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclMngPrivilegedAccounts -Group "SL_PUM"</code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclMngPrivilegedAccounts -Group "SL_PUM" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on AdminSDHolder container to Manage Privileged Accounts objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.MngPrivilegedAccounts.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.MngPrivilegedAccounts.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.MngPrivilegedAccounts.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.MngPrivilegedAccounts.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.MngPrivilegedAccounts.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.MngPrivilegedAccounts.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.RemoveUnknownSID">
             <summary>
             <para type="synopsis">Remove Un-Resolvable SID from a given object</para>
             <para type="description">Remove Un-Resolvable SID from a given object. If a SID is displayed within the ACE, is</para>
             <para type="description">because a name could not be resolved. Most likely the object was deleted, and its friendly </para>
             <para type="description">name could not be retrived. This function will identify this unresolved SID and remove it from the ACE</para>
             <example>
             This example shows how to use this CMDlet, just displaying Unknown SID
             <code>Remove-UnknownSID "OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet using named parameters, just displaying Unknown SID
             <code>Remove-UnknownSID -LDAPpath "OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local"</code>
            
             This example shows how to use this CMDlet using named parameters and actually removing Unknown SID
             <code>Remove-UnknownSID -LDAPpath "OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local" -RemoveSID</code>
             </example>
             <remarks>Remove Unknown SID from an ACE</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RemoveUnknownSID.LDAPpath">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the object (or container) where the permissions are going to be configured.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.RemoveUnknownSID.RemoveSID">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the unknown SID will be removed. If ommited, unknown SID will only display.</para>
            <para type="description">Switch indicator to remove the unknown SID</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RemoveUnknownSID.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RemoveUnknownSID.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.RemoveUnknownSID.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.PkiAdmin">
            <summary>
            <para type="synopsis">Set delegation to fully manage Certificate Authority (CA or PKI)</para>
            <para type="description">Configures the configuration container to delegate the permissions to a group so it can fully manage Certificate Authority (CA or PKI).</para>
            <example>
            This example shows how to use this CMDlet to add permissions
            <code>Set-AdAclPkiAdmin "SL_PkiRight"</code>
            </example>
            <example>
            This example shows how to use this CMDlet to add permissions using named parameters
            <code>Set-AdAclPkiAdmin -Group "SL_PkiRight" </code>
            </example>
            <example>
            This example shows how to use this CMDlet to remove permissions using named parameters
            <code>Set-AdAclPkiAdmin -Group "SL_PkiRight" -RemoveRule</code>
            </example>
            <remarks>Set the permissions on a container to fully manage Certificate Authority (CA or PKI)</remarks>
            </summary>
            <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.PkiAdmin.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.PkiAdmin.ItRightsOuDN">
            <summary>
            <para type="inputType">STRING representing the Distinguished Name of the object (ej. OU=Rights,OU=Admin,DC=EguibarIT,DC=local).</para>
            <para type="description">Distinguished Name of the OU having the Rights groups (Usually OU=Rights,OU=Admin,DC=EguibarIT,DC=local).</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.PkiAdmin.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PkiAdmin.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PkiAdmin.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PkiAdmin.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PkiAdmin.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.PkiTemplateAdmin">
             <summary>
             <para type="synopsis">Set delegation to fully manage CA Templates</para>
             <para type="description">Configures the configuration container to delegate the permissions to a group so it can fully manage CA Templates.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclPkiTemplateAdmin "SL_PkiTemplatesRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclPkiTemplateAdmin -Group "SL_PkiTemplatesRight" </code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclPkiTemplateAdmin -Group "SL_PkiTemplatesRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to fully manage CA Templates</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.PkiTemplateAdmin.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.PkiTemplateAdmin.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PkiTemplateAdmin.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PkiTemplateAdmin.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PkiTemplateAdmin.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.PkiTemplateAdmin.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteSiteLink">
             <summary>
             <para type="synopsis">Set delegation to create/delete Site-Link objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete Site-Link objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteSiteLink "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteSiteLink -Group "SL_InfraRight" </code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteSiteLink -Group "SL_InfraRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete Site-Link objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteSiteLink.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteSiteLink.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSiteLink.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSiteLink.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSiteLink.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSiteLink.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteSite">
             <summary>
             <para type="synopsis">Set delegation to create/delete Site objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete Site objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteSite "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteSite -Group "SL_InfraRight" </code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteSite -Group "SL_InfraRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete Site objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteSite.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteSite.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSite.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSite.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSite.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSite.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.CMDlets.CreateDeleteSubnet">
             <summary>
             <para type="synopsis">Set delegation to create/delete Subnet objects</para>
             <para type="description">Configures the container (OU) to delegate the permissions to a group so it can create/delete Subnet objects.</para>
             <example>
             This example shows how to use this CMDlet to add permissions
             <code>Set-AdAclCreateDeleteSubnet "SL_InfraRight"</code>
            
             This example shows how to use this CMDlet to add permissions using named parameters
             <code>Set-AdAclCreateDeleteSubnet -Group "SL_InfraRight" </code>
            
             This example shows how to use this CMDlet to remove permissions using named parameters
             <code>Set-AdAclCreateDeleteSubnet -Group "SL_InfraRight" -RemoveRule</code>
             </example>
             <remarks>Set the permissions on a container to create/delete Subnet objects</remarks>
             </summary>
             <para type="link" uri="(http://EguibarIT.eu)">[Eguibar Information Technology S.L. web site]</para>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteSubnet.Group">
            <summary>
            <para type="inputType">STRING representing the group SamAccountName.</para>
            <para type="description">Identity of the group getting the delegation.</para>
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.CMDlets.CreateDeleteSubnet.RemoveRule">
            <summary>
            <para type="inputType">SWITCH parameter (true or false). If present the value becomes TRUE, and the access rule will be removed</para>
            <para type="description">Switch indicator to remove the access rule</para>
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSubnet.BeginProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSubnet.ProcessRecord">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSubnet.EndProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.CMDlets.CreateDeleteSubnet.StopProcessing">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.Constructors.AclCon4">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Constructors.AclCon4.AclConstructor4(System.String,System.String,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.Boolean)">
            <summary>
            Constructor to add or remove Active Directory Access Rules with 4 parameters
            </summary>
            <param name="LDAPpath">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local)</param>
            <param name="GroupID">STRING representing the group SamAccountName</param>
            <param name="adRights">The ActiveDirectoryRights enumeration specifies the access rights that are assigned to an Active Directory Domain Services object</param>
            <param name="acType">Access Control type to Allow or Deny</param>
            <param name="objectType">Object GUID defined on the Schema</param>
            <param name="RemoveRule">BOOL indicating if the given rule has to be removed</param>
            <returns>bool</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Constructors.AclCon4.AclConstructor5(System.String,System.Security.Principal.SecurityIdentifier,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.Boolean)">
            <summary>
            Constructor to add or remove Active Directory Access Rules with 5 parameters
            </summary>
            <param name="LDAPpath">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local)</param>
            <param name="GroupID">SID representing the group SamAccountName</param>
            <param name="adRights">The ActiveDirectoryRights enumeration specifies the access rights that are assigned to an Active Directory Domain Services object</param>
            <param name="acType">Access Control type to Allow or Deny</param>
            <param name="objectType">Object GUID defined on the Schema</param>
            <param name="RemoveRule">BOOL indicating if the given rule has to be removed</param>
            <returns>bool</returns>
        </member>
        <member name="T:EguibarIT.Delegation.Constructors.AclCon5">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Constructors.AclCon5.AclConstructor5(System.String,System.String,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Boolean)">
            <summary>
            Constructor to add or remove Active Directory Access Rules with 5 parameters
            </summary>
            <param name="LDAPpath">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local)</param>
            <param name="GroupID">STRING representing the group SamAccountName</param>
            <param name="adRights">The ActiveDirectoryRights enumeration specifies the access rights that are assigned to an Active Directory Domain Services object</param>
            <param name="acType">Access Control type to Allow or Deny</param>
            <param name="objectType">Object GUID defined on the Schema</param>
            <param name="inheritanceType">Specifies if, and how, ACE information is applied to an object and its descendents</param>
            <param name="RemoveRule">BOOL indicating if the given rule has to be removed</param>
            <returns>bool</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Constructors.AclCon5.AclConstructor5(System.String,System.Security.Principal.SecurityIdentifier,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Boolean)">
            <summary>
            Constructor to add or remove Active Directory Access Rules with 5 parameters
            </summary>
            <param name="LDAPpath">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local)</param>
            <param name="GroupID">SID representing the group SamAccountName</param>
            <param name="adRights">The ActiveDirectoryRights enumeration specifies the access rights that are assigned to an Active Directory Domain Services object</param>
            <param name="acType">Access Control type to Allow or Deny</param>
            <param name="objectType">Object GUID defined on the Schema</param>
            <param name="inheritanceType">Specifies if, and how, ACE information is applied to an object and its descendents</param>
            <param name="RemoveRule">BOOL indicating if the given rule has to be removed</param>
            <returns>bool</returns>
        </member>
        <member name="T:EguibarIT.Delegation.Constructors.AclCon6">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Constructors.AclCon6.AclConstructor6(System.String,System.String,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid,System.Boolean)">
            <summary>
            Constructor to add or remove Active Directory Access Rules with 6 parameters
            </summary>
            <param name="LDAPpath">STRING representing the Distinguished Name of the object (ej. OU=Users,OU=Good,OU=Sites,DC=EguibarIT,DC=local)</param>
            <param name="GroupID">STRING representing the group SamAccountName</param>
            <param name="adRights">The ActiveDirectoryRights enumeration specifies the access rights that are assigned to an Active Directory Domain Services object</param>
            <param name="acType">Access Control type to Allow or Deny</param>
            <param name="objectType">Object GUID defined on the Schema</param>
            <param name="inheritanceType">Specifies if, and how, ACE information is applied to an object and its descendents</param>
            <param name="inheritedObjectType">Schema GUID of object to be inherited</param>
            <param name="RemoveRule">BOOL indicating if the given rule has to be removed</param>
            <returns></returns>
        </member>
        <member name="T:EguibarIT.Delegation.Other.AccessRule">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.AccessRule.AclAccessRule(System.String,System.String)">
            <summary>
            Returns a List of Access Control Rules of a given object, being able to filter if identity is present
            </summary>
            <param name="_distinguishedName">LDAPpath to the object to get the list from</param>
            <param name="_searchby">If present, list only the Control Rules matching this identity</param>
            <returns>List of Arrays</returns>
        </member>
        <member name="T:EguibarIT.Delegation.Other.GPOs">
            <summary>
            Class to access GptTmpl.inf and modify its data.
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.GPOs.ConfigRestrictionsOnSection(System.String,System.String,System.Collections.Generic.List{System.String},EguibarIT.Delegation.Other.IniFile)">
            <summary>
            Configure a Section with Key/Value of a GptTmpl.inf file.
            </summary>
            <param name="CurrentSection">Section name</param>
            <param name="CurrentKey">Key name</param>
            <param name="members">List of values to be configured</param>
            <param name="GptTmpl">GptTmpl.inf file as IniFile object</param>
            <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.GPOs.GptTemplate(System.String)">
            <summary>
            Get the GptTmpl.inf file from the given GPO.
            </summary>
            <param name="_GpoToModify">Name of the GPO to get the GptTmpl.inf file</param>
            <returns></returns>
        </member>
        <member name="T:EguibarIT.Delegation.Other.GPTs">
            <summary>
            Class to access Gpt.ini and modify its data.
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.GPTs.UpdateGpt(System.String)">
            <summary>
            Update Version number on both AD object and GPT.ini file
            </summary>
            <param name="_GpoToModify">Name of the GPO to get the Gpt.ini file</param>
            <returns></returns>
        </member>
        <member name="T:EguibarIT.Delegation.Other.IniFile">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.Other.IniFile.FilePath">
            <summary>
            The full path and name of the ini file.
            Example:
            "C:\folder\file.ini"
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.Other.IniFile.Sections">
            <summary>
            A dictionary of sections within the INI file.
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.Other.IniFile.KeyValuePair">
            <summary>
            A dictionary of KeyValuePair not contained within a specific section.
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniFile.#ctor">
            <summary>
            Creates a new, empty, IniFile object.
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniFile.#ctor(System.String)">
            <summary>
            Creates a new IniFile object from the given INI file.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniFile.ReadFile(System.String)">
            <summary>
            Populate IniFile object from the INI file
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniFile.SaveFile">
            <summary>
            Attempts to save the INI file record to its associated physical file.
            </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniFile.SaveFile(System.String)">
            <summary>
            Attempts to save the INI file record to the specified physical
            file. It is created if it does not exist.
            </summary>
            <param name="filePath">
            The full path to the file which will be created or overwritten.
            </param>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniFile.WriteAllText">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniFile.WriteAllText(System.String)">
            <summary>
            Can't use IniFile.Save to save, generates an error when GPO console try to read the file.
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="P:EguibarIT.Delegation.Other.IniFile.Item(System.String,System.String)">
            <summary>
            Gets or sets the setting with name key in the specified section.
            If it does not exist setting it will create it and getting it will return null.
            </summary>
            <param name="sectionName">name of section to place key in.</param>
            <param name="key">the unique key name linked to this setting</param>
            <returns>value associated with key or null if it does not exist</returns>
        </member>
        <member name="P:EguibarIT.Delegation.Other.IniFile.Item(System.String)">
            <summary>
            Gets or sets the setting with name key in the INI files uncategorized paramaters.
            </summary>
            <param name="key">the unique key name linked to this setting</param>
            <returns></returns>
        </member>
        <member name="T:EguibarIT.Delegation.Other.IniSection">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.Other.IniSection.KeyValuePair">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.Other.IniSection.SectionName">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniSection.#ctor(System.String)">
             <summary>
            
             </summary>
             <param name="sectionName"></param>
        </member>
        <member name="T:EguibarIT.Delegation.Other.IniSections">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniSections.Add(EguibarIT.Delegation.Other.IniSection)">
             <summary>
            
             </summary>
             <param name="section"></param>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniSections.Add(System.String,EguibarIT.Delegation.Other.IniSection)">
             <summary>
            
             </summary>
             <param name="name"></param>
             <param name="section"></param>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniSections.ContainsKey(System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="P:EguibarIT.Delegation.Other.IniSections.Item(System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="T:EguibarIT.Delegation.Other.IniKeyValuePair">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniKeyValuePair.Add(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="value"></param>
        </member>
        <member name="M:EguibarIT.Delegation.Other.IniKeyValuePair.ContainsKey(System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="P:EguibarIT.Delegation.Other.IniKeyValuePair.Item(System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="T:EguibarIT.Delegation.Other.Domains">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.Exists(System.String)">
             <summary>
            
             </summary>
             <param name="objectPath"></param>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.FriendlyDomainToLdapDomain(System.String)">
             <summary>
            
             </summary>
             <param name="friendlyDomainName"></param>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.EnumerateDomains(System.String)">
             <summary>
            
             </summary>
             <param name="ForestName"></param>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.EnumerateDomains">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.EnumerateDomainsGC(System.String)">
             <summary>
            
             </summary>
             <param name="ForestName"></param>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.EnumerateDomainsGC">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.EnumerateDomainControllers(System.String)">
             <summary>
            
             </summary>
             <param name="DomainName"></param>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.EnumerateDomainControllers">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.GetAdFQDN">
            <summary>
            Gets the AD FQDS from current domain
            </summary>
            <returns>AD Fully Qualified Domain Name - FQDN</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.GetNetbiosDomainName(System.String)">
            <summary>
            Gets NetBIOS domain name from DNS Domain Name
            </summary>
            <param name="dnsDomainName"></param>
            <returns>AD NetBIOS domain Name</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.GetNetbiosDomainName">
            <summary>
            Gets NetBIOS domain name finding the current AD FQDN
            </summary>
            <returns>AD NetBIOS domain Name</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.GetdefaultNamingContext">
            <summary>
            Get the "Default Naming Context" form the current Domain/Forest
            </summary>
            <returns>Default Naming Context</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.GetConfigurationNamingContext">
            <summary>
            Get the "Configuration Naming Context" form the current Domain/Forest
            </summary>
            <returns>Configuration Naming Context</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.GetschemaNamingContext">
            <summary>
            Get the "Schema Naming Context" form the current Domain/Forest
            </summary>
            <returns>Schema Naming Context</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.GetrootDomainNamingContext">
            <summary>
            Get the "Root Domain Naming Context" form the current Domain/Forest
            </summary>
            <returns>Root Domain Naming Context</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.getAllNamingContexts">
            <summary>
            Return arrayList of all available Naming Contexts
            </summary>
            <returns>All Naming Contexts</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.GetForestPartitionsContainer">
            <summary>
            Returs the Forest Partitions Container
            </summary>
            <returns>Forest Partitions Container</returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Domains.GetPartitionsReplicaLocations">
            <summary>
            Get Partitions Container from Configuration
            </summary>
            <returns></returns>
        </member>
        <member name="T:EguibarIT.Delegation.Other.Finding">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Finding.GetUserLDAPProperties(System.String)">
             <summary>
            
             </summary>
             <param name="LDAPUrl"></param>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Finding.GetNTAccountProperty(System.String,System.String,System.String)">
             <summary>
            
             </summary>
             <param name="sid"></param>
             <param name="domain"></param>
             <param name="propertyToLoad"></param>
             <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.Other.Finding.GetLDAPDomainName(System.String)">
             <summary>
            
             </summary>
             <param name="domainName"></param>
             <returns></returns>
        </member>
        <member name="T:EguibarIT.Delegation.GUIDs">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.GUIDs.GetAllClassSchemaGUID">
            <summary>
            get all schema classess and store it into a hashtable
            in the form "name" = "GUID" (Key=Value)
            </summary>
            <returns>Hashtable</returns>
        </member>
        <member name="M:EguibarIT.Delegation.GUIDs.GetAllAttributeSchemaGUID">
            <summary>
            get all schema Attributes and store it into a hashtable
            in the form "name" = "GUID" (Key=Value)
            </summary>
            <returns>Hashtable</returns>
        </member>
        <member name="M:EguibarIT.Delegation.GUIDs.GetAllExtendedRightsGUID">
            <summary>
            get all schema Extended-Rights and store it into a hashtable
            in the form "name" = "GUID" (Key=Value)
            </summary>
            <returns>Hashtable</returns>
        </member>
        <member name="M:EguibarIT.Delegation.GUIDs.GetInvAllClassSchemaGUID">
            <summary>
            get all schema classess and store it into a hashtable
            in the form "GUID" = "name" (Value=Key)
            </summary>
            <returns>Dictionary</returns>
        </member>
        <member name="M:EguibarIT.Delegation.GUIDs.GetInvAllAttributeSchemaGUID">
            <summary>
            get all schema Attributes and store it into a hashtable
            in the form "GUID" = "name" (Value=Key)
            </summary>
            <returns>Dictionary</returns>
        </member>
        <member name="M:EguibarIT.Delegation.GUIDs.GetInvAllExtendedRightsGUID">
            <summary>
            get all schema Extended-Rights and store it into a hashtable
            in the form "name" = "GUID" (Key=Value)
            </summary>
            <returns>Dictionary</returns>
        </member>
        <member name="M:EguibarIT.Delegation.GUIDs.ConvertNameToSchemaGUID(System.String)">
            <summary>
            Translate the name into the Schema GUID
            </summary>
            <param name="_name"></param>
            <returns>Schema GUID of the given LDAP display name</returns>
        </member>
        <member name="M:EguibarIT.Delegation.GUIDs.ConvertNameToSchemaGUID(System.Guid)">
            <summary>
            Translate the GUID into the Schema Name
            </summary>
            <param name="_guid"></param>
            <returns>STRING representing the LDAP Display name of the GUID</returns>
        </member>
        <member name="T:EguibarIT.Delegation.SIDs">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.SIDs.ConvertSidToName(System.String)">
            <summary>
            Convert SID to Name
            </summary>
            <param name="_sid">Security Identifier SID of the object to be translated</param>
            <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.SIDs.ConvertSidToName(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Convert SID to Name
            </summary>
            <param name="_sid">Security Identifier SID of the object to be translated</param>
            <returns></returns>
        </member>
        <member name="M:EguibarIT.Delegation.SIDs.SidExists(System.String)">
            <summary>
            Verify if SID exists. If IdentityNotMappedException is raised, means the SID does not exists and returns false.
            </summary>
            <param name="_sid">STRING representing the SID to be translated.</param>
            <returns>BOOL. True if SID exists. False if it does not exist.</returns>
        </member>
        <member name="M:EguibarIT.Delegation.SIDs.IsWellKnownSID(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Check the given sid against the System.Security.Principal.WellKnownSidType. Return true if a match is found.
            </summary>
            <param name="_sid"></param>
            <returns>BOOL indicating if SID is a WellKnownSid</returns>
        </member>
        <member name="M:EguibarIT.Delegation.SIDs.GetNameOfWellKnownSID(System.Security.Principal.SecurityIdentifier)">
            <summary>
            Check the given sid against the System.Security.Principal.WellKnownSidType. Return the name if a match is found.
            </summary>
            <param name="_sid"></param>
            <returns>Name of the WellKnownSid</returns>
        </member>
        <member name="M:EguibarIT.Delegation.SIDs.CheckIfNameIsWellKnownSID(System.String)">
            <summary>
            Return the WellKnownSID of the given SamAccountName
            </summary>
            <param name="_name"></param>
            <returns>SID</returns>
        </member>
        <member name="M:EguibarIT.Delegation.SIDs.DomainSid">
            <summary>
            Return the current Domain SID
            </summary>
            <returns>Domain SID</returns>
        </member>
        <member name="T:EguibarIT.Delegation.Vars">
             <summary>
            
             </summary>
        </member>
        <member name="F:EguibarIT.Delegation.Vars.AllclassSchemaGuids">
            <summary>
            Global Variable as Hashtable containing all classSchema Name=GUID
            </summary>
        </member>
        <member name="F:EguibarIT.Delegation.Vars.AllAttributeSchemaGuids">
            <summary>
            Global Variable as Hashtable containing all AttributeSchema Name=GUID
            </summary>
        </member>
        <member name="F:EguibarIT.Delegation.Vars.AllExtendedRightsGuids">
            <summary>
            Global Variable as Hashtable containing all Extended Rights Name=GUID
            </summary>
        </member>
        <member name="F:EguibarIT.Delegation.Vars.InvAllclassSchemaGuids">
            <summary>
            Global Variable as Hashtable containing all classSchema GUID=Name
            </summary>
        </member>
        <member name="F:EguibarIT.Delegation.Vars.InvAllAttributeSchemaGuids">
            <summary>
            Global Variable as Hashtable containing all AttributeSchema GUID=Name
            </summary>
        </member>
        <member name="F:EguibarIT.Delegation.Vars.InvAllExtendedRightsGuids">
            <summary>
            Global Variable as Hashtable containing all Extended Rights GUID=Name
            </summary>
        </member>
        <member name="F:EguibarIT.Delegation.Vars.IsClassSchema">
             <summary>
            
             </summary>
        </member>
        <member name="F:EguibarIT.Delegation.Vars.IsAttributeSchema">
             <summary>
            
             </summary>
        </member>
        <member name="F:EguibarIT.Delegation.Vars.IsExtendedRights">
             <summary>
            
             </summary>
        </member>
        <member name="F:EguibarIT.Delegation.Vars.IsInverse">
             <summary>
            
             </summary>
        </member>
        <member name="T:EguibarIT.Delegation.ACEarray">
            <summary>
            Access Control Entry (ACE) class
            Used to return ACE from AD
            </summary>
        </member>
        <member name="P:EguibarIT.Delegation.ACEarray.ACENumber">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.ACEarray.DistinguishedName">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.ACEarray.IdentityReference">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.ACEarray.ActiveDirectoryRightst">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.ACEarray.AccessControlType">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.ACEarray.ObjectType">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.ACEarray.InheritanceType">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.ACEarray.InheritedObjectType">
             <summary>
            
             </summary>
        </member>
        <member name="P:EguibarIT.Delegation.ACEarray.IsInherited">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.ACEarray.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:EguibarIT.Delegation.ACEarray.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Access Control Entry Array for AclAccessRule CMDlet
            </summary>
            <param name="number"></param>
            <param name="distinguishedName"></param>
            <param name="identityReference"></param>
            <param name="activeDirectoryRightst"></param>
            <param name="accessControlType"></param>
            <param name="objectType"></param>
            <param name="inheritanceType"></param>
            <param name="inheritedObjectType"></param>
            <param name="isInherited"></param>
        </member>
    </members>
</doc>
